import osimport Update_Sheetfrom ICS_Shared_Config import ICS_Shared_Configfrom  datetime import datetimeimport timeif __name__ == "__main__":    # use creds to create a client to interact with the Google Drive API    ''' Here is the Initialization for setting path        now it is moved to the ICS_Shared_Config '''    ICS_Shared_Config.Initialization()    ics_config = ICS_Shared_Config.Config()    file_running_path = ics_config.run_file()    sleep_time = ics_config.sleep()    running_file = open(file_running_path, 'w')    running_file.write("1")    running_file.close()    ICS_Shared_Config.Gspread_Client(True)    timeout = ics_config.timeout()    while True:        try:            ICS_Shared_Config.log("Testing Email and RDP : Start Test")            '''type: Thread[] '''            threads = []            new_thread = Update_Sheet.ICS_Monitor_POP()            threads.append(new_thread)            new_thread.start()            new_thread = Update_Sheet.ICS_Monitor_Remote()            threads.append(new_thread)            new_thread.start()            time.sleep(3)            new_thread = Update_Sheet.ICS_Monitor_POP_SSL()            threads.append(new_thread)            new_thread.start()            total_sleep = 0            while len(threads)>0 and total_sleep<=timeout :                for each_thread in threads:                    if not each_thread.isAlive():                        threads.remove(each_thread)                time.sleep(60)                total_sleep+=60            if (total_sleep>=timeout):                ICS_Shared_Config.log("Testing Email and RDP : Pass Timeout")                for each_thread in threads:                    each_thread._stop()                    threads.remove(each_thread)            ICS_Shared_Config.log("Testing Email and RDP : Delay test")            time.sleep(sleep_time)            if not os.path.isfile(file_running_path):                break        except Exception as  e:            ICS_Shared_Config.log(os.path.basename(__file__) + " : " +  str(e))            ICS_Shared_Config.Gspread_Client(True)    ICS_Shared_Config.log(datetime.now().strftime("%Y-%m-%d %H:%M:%S") + " Testing Email : terminated ")    input()'''    while True:        print (datetime.now().strftime("%Y-%m-%d %H:%M:%S") + " Testing Email and RDP : Start Test " )        try:			monitorApp = ICS_Monitor(client)			monitorApp.test_email()			monitorApp.test_remote()			key_input = ""			time.sleep(sleep_time)        except:            creds = ServiceAccountCredentials.from_json_keyfile_name(\                client_secret_json_path, scope)            client = gspread.authorize(creds)            print  datetime.now().strftime("%Y-%m-%d %H:%M:%S")+  " Refresh the token"                if not os.path.isfile(file_running_path):            break    print datetime.now().strftime("%Y-%m-%d %H:%M:%S") + " Testing Email : terminated "    input()'''